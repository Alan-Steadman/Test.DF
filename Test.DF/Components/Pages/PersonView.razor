@page "/person"
@inject AppStateContainer appStateContainer
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Person View</PageTitle>

@if (person is null)
{
    <h3>Person not found</h3>
    <p>Try navigating back to the <a href="/">home page</a> to enter details</p>
}
else
{
    <h3>Hello @person.FirstName</h3>

    <p>Your full name contains @person.VowelCount() vowels.</p>

    <p>Your age today is @person.Age()</p>

    <p>
        Your next birthday is @person.NextBirthday(),

        which is in @person.DaysToNextBirthday() days time.
    </p>

    <div class="card">
        <div class="card-body p-0">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Days leading up to your birthday</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var day in person.ListDaysLeadingToBirthday(14))
                    {
                        <tr @onclick="(() => Navigate(day.linkUrl))" class="clickable">
                            <td>
                                <span>@day.formattedDate</span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    private Person? person;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            person = await appStateContainer.GetPersonAsync();
            StateHasChanged();
        }
    }

    private void Navigate(string url)
    {
        navigationManager.NavigateTo(url);
    }
}
